function Calls = SqueakDetectMinimalDisplay(wavFile, detectorMat)
% SqueakDetectMinimalDisplay - minimal DeepSqueak-style detector
% Displays the spectrogram image that is fed to the YOLO network

%% Load network & parameters
netFile  = load(detectorMat);
network  = netFile.detector;

wind     = netFile.wind;
noverlap = netFile.noverlap;
nfft     = netFile.nfft;

if isfield(netFile, 'imScale')
    imScale = netFile.imScale;
else
    imScale = @oldScale;
end

%% Read audio
info = audioinfo(wavFile);
[audio, fs] = audioread(wavFile);

if size(audio,2) > 1
    audio = mean(audio, 2); % mono mix
end

%% Adjust spectrogram settings
wind     = round(wind     * fs);
noverlap = round(noverlap * fs);
nfft     = round(nfft     * fs);

%% Generate spectrogram
[~, fr, ti, p] = spectrogram(audio, wind, noverlap, nfft, fs, 'yaxis');

% Frequency limits
HighCutoff = 100; % kHz
LowCutoff  = 0;   % kHz
upper_freq = find(fr <= HighCutoff*1000, 1, 'last');
lower_freq = find(fr >= LowCutoff*1000,  1, 'first');
p = p(lower_freq:upper_freq, :);

%% Scale to image
im = imScale(p);

%% Display the spectrogram image with detections
figure;
imshow(im);
title(['Spectrogram for ', wavFile]);
hold on;

% Draw YOLO boxes on spectrogram
for i = 1:size(bboxes,1)
    rectangle('Position', bboxes(i,:), 'EdgeColor', 'r', 'LineWidth', 1);
    text(bboxes(i,1), bboxes(i,2)-5, sprintf('%.2f', scores(i)), ...
         'Color', 'yellow', 'FontSize', 8, 'FontWeight', 'bold');
end
hold off;

%% Run detection
[bboxes, scores, classLabels] = detect(network, im, 'SelectStrongest', false);

isUSV = classLabels == 'USV';
bboxes = bboxes(isUSV, :);
scores = scores(isUSV);

if isempty(bboxes)
    Calls = table();
    return;
end

%% Convert bbox coords
startTime = ti(bboxes(:,1));
endTime   = ti(bboxes(:,1) + bboxes(:,3));
lowFreq   = fr(upper_freq - (bboxes(:,2) + bboxes(:,4))) / 1000;
highFreq  = fr(upper_freq - bboxes(:,2)) / 1000;

Calls = table(startTime, endTime, lowFreq, highFreq, scores, ...
              'VariableNames', {'StartTime_s', 'EndTime_s', 'LowFreq_kHz', 'HighFreq_kHz', 'Score'});

end

%% Old DeepSqueak scaling
function im = oldScale(p)
    p(p==0) = .01;
    p = log10(p);
    p = rescale(imcomplement(abs(p)));
    xTile = ceil(size(p,1) / 50);
    yTile = ceil(size(p,2) / 50);
    if xTile > 1 && yTile > 1
        im = adapthisteq(flipud(p), 'NumTiles', [xTile yTile], ...
                         'ClipLimit', .005, 'Distribution', 'rayleigh', 'Alpha', .4);
    else
        im = adapthisteq(flipud(p), 'NumTiles', [2 2], ...
                         'ClipLimit', .005, 'Distribution', 'rayleigh', 'Alpha', .4);
    end
end

Calls = SqueakDetectMinimalDisplay('VL1_25-07-13.wav', '2025.02.18.Mouse.YoloR3.mat');